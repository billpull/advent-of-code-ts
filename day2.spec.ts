import { day2, getFirstNumber, bruteForce, sillyMath } from './day2';

test('should work', () => {
    expect(day2('99')).toBe('99');
    expect(day2('1,0,0,0,99')).toBe('2,0,0,0,99');
    expect(day2('2,3,0,3,99')).toBe('2,3,0,6,99');
    expect(day2('2,4,4,5,99,0')).toBe('2,4,4,5,99,9801');
    expect(day2('1,1,1,4,99,5,6,0,99')).toBe('30,1,1,4,2,5,6,0,99');
    expect(
         day2('1,12,2,3,1,1,2,3,1,3,4,3,1,5,0,3,2,1,10,19,1,19,5,23,2,23,6,27,1,27,5,31,2,6,31,35,1,5,35,39,2,39,9,43,1,43,5,47,1,10,47,51,1,51,6,55,1,55,10,59,1,59,6,63,2,13,63,67,1,9,67,71,2,6,71,75,1,5,75,79,1,9,79,83,2,6,83,87,1,5,87,91,2,6,91,95,2,95,9,99,1,99,6,103,1,103,13,107,2,13,107,111,2,111,10,115,1,115,6,119,1,6,119,123,2,6,123,127,1,127,5,131,2,131,6,135,1,135,2,139,1,139,9,0,99,2,14,0,0'))
        .toBe('5866663,12,2,2,1,1,2,3,1,3,4,3,1,5,0,3,2,1,10,48,1,19,5,49,2,23,6,98,1,27,5,99,2,6,31,198,1,5,35,199,2,39,9,597,1,43,5,598,1,10,47,602,1,51,6,604,1,55,10,608,1,59,6,610,2,13,63,3050,1,9,67,3053,2,6,71,6106,1,5,75,6107,1,9,79,6110,2,6,83,12220,1,5,87,12221,2,6,91,24442,2,95,9,73326,1,99,6,73328,1,103,13,73333,2,13,107,366665,2,111,10,1466660,1,115,6,1466662,1,6,119,1466664,2,6,123,2933328,1,127,5,2933329,2,131,6,5866658,1,135,2,5866660,1,139,9,0,99,2,14,0,0');
});

test('get first number', () => {
    expect(getFirstNumber('1,0,0,0,99')).toBe(2);
})

test('brute force', () => {
    expect(
        bruteForce('1,12,2,3,1,1,2,3,1,3,4,3,1,5,0,3,2,1,10,19,1,19,5,23,2,23,6,27,1,27,5,31,2,6,31,35,1,5,35,39,2,39,9,43,1,43,5,47,1,10,47,51,1,51,6,55,1,55,10,59,1,59,6,63,2,13,63,67,1,9,67,71,2,6,71,75,1,5,75,79,1,9,79,83,2,6,83,87,1,5,87,91,2,6,91,95,2,95,9,99,1,99,6,103,1,103,13,107,2,13,107,111,2,111,10,115,1,115,6,119,1,6,119,123,2,6,123,127,1,127,5,131,2,131,6,135,1,135,2,139,1,139,9,0,99,2,14,0,0'))
        .toStrictEqual([42,59]);
})
test('fuzzy math', () => {
    expect(sillyMath('1,12,2,3,1,1,2,3,1,3,4,3,1,5,0,3,2,1,10,19,1,19,5,23,2,23,6,27,1,27,5,31,2,6,31,35,1,5,35,39,2,39,9,43,1,43,5,47,1,10,47,51,1,51,6,55,1,55,10,59,1,59,6,63,2,13,63,67,1,9,67,71,2,6,71,75,1,5,75,79,1,9,79,83,2,6,83,87,1,5,87,91,2,6,91,95,2,95,9,99,1,99,6,103,1,103,13,107,2,13,107,111,2,111,10,115,1,115,6,119,1,6,119,123,2,6,123,127,1,127,5,131,2,131,6,135,1,135,2,139,1,139,9,0,99,2,14,0,0'))
        .toBe(4259);
})
